#!/bin/env bash

poetry install

gh repo create {{ org }}/{{ name }} \
    --description {{ description }} \
    --public

git init -b main

git remote add origin git@github.com:{{ org }}/{{ name }}.git
git fetch

git add .
git commit -m "Initial commit"
git push -u origin main

git checkout --orphan docs
git rm -rf .
git add .
git commit --allow-empty -m "Initial commit"
git push -u origin docs

git checkout main
git checkout --orphan docs-dev
git rm -rf .
git add .
git commit --allow-empty -m "Initial commit"
git push -u origin docs-dev

git checkout main
git checkout -b v0

gh repo edit {{ org }}/{{ name }} --default-branch v0
gh push --delete origin main

# TODO: Enable this only as soon as you've managed to make an exception
# for the CI/CD, which obviously ought to be able to write.
#
#echo "Adding ruleset to protect documentation branches…"
#echo -en "\t"
#gh api \
#    --method POST \
#    -H "Accept: application/vnd.github+json" \
#    -H "X-GitHub-Api-Version: 2022-11-28" \
#    /repos/{{ org }}/$(basename `git config --get remote.origin.url` | cut -d . -f -1)/rulesets \
#    --input "scripts/protect-docs-branches-ruleset-def.json"
#@echo "… OK."
#@echo

echo "Adding ruleset to protect major branches…"
echo -en "\t"
gh api \
    --method POST \
    -H "Accept: application/vnd.github+json" \
    -H "X-GitHub-Api-Version: 2022-11-28" \
    /repos/{{ org }}/$(basename `git config --get remote.origin.url` | cut -d . -f -1)/rulesets \
    --input "scripts/protect-major-branches-ruleset-def.json"
echo "… OK."
echo

#gh workflow enable 'Preview version'
#gh workflow enable 'Release new major version'
#gh workflow enable 'Release new minor version'
#gh workflow enable 'Release new patch version'
